#!/bin/bash
#This is where the pipeline begins.

#Greetinh
echo
echo "<============Welcome to StarRRS=================>"
echo

# Ask the user for their name
echo
echo "Hello, who am I talking to?"
read varname
echo
echo "It\'s nice to meet you $varname, thank for using StarRRS"

# Add start time
TIMESTAMP=$(date +%Y-%m-%d_%Hh%Mm%Ss)

echo
echo "Starting time: $TIMESTAMP"
echo

echo "$varname, could you please tell me where is your fastq file?"

read FASTQ
DATA=$FASTQ
echo
#echo "Great, can you help me to find Sabre in your PC? (please give me its path)"

#read SABRE
#TOOL=$SABRE
#echo
echo "You are doing great, now I need path for the barcodes"
read BAR
BARCODE=$BAR
echo
echo "$varname, I will create a new directory for your demultiplexed data. Its name is NGS"
echo

mkdir NGS

# Change path

cd NGS

# Create log file for the program

echo "I will create a sabre log file for this analysis that you can find it in NGS directory"
exec &> sabre.log

# Run the program

sabre se -f $DATA -b $BARCODE -u unk.fastq
exec >/dev/tty

#################Cutadapt####################

echo "Starting Cutadapt!"
CPU=1
echo "User, please enter the number of CPU"
read CPU
ADAP=AGATCGGAA
exec &> cutadapt.log
parallel -j $CPU cutadapt -a $ADAP -m 50 -o {}.fastq {}.fq ::: $(ls -1 *.fq | sed 's/.fq//')
	if [ $? -ne 0 ]
		then
			printf There is error in the cutadapt
			exit 1
	fi

exec >/dev/tty


##########################################
echo "Starting Mapping!"
echo "Please enter the path to your reference genome."
read Reference
REF=$Reference
THR=2

exec &> bwa.log
		parallel -j $CPU bwa mem -t $THR $REF {}.fastq ">" {}.sam ::: $(ls -1 *.fastq | sed 's/.fastq//')
		if [ $? -ne 0 ]
			then 
				printf There is a problem in the alignment step
				exit 1
		fi
exec >/dev/tty

######################################
# create a log file
exec &> convert.log

# convert SAM format to BAM format

parallel -j $CPU samtools view -b -S -h {}.sam ">" {}.temp.bam ::: $(ls -1 *.sam | sed 's/.sam//')
		if [ $? -ne 0 ]
			then 
				printf "There is a problem in the samtools-view step"
				exit 1
		fi
# sort BAM files

parallel -j $CPU samtools sort {}.temp.bam -o {}.sort.bam ::: $(ls -1 *.temp.bam | sed 's/.temp.bam//')
		if [ $? -ne 0 ]
			then 
				printf "There is a problem in the samtools-sort step"
				exit 1
		fi

# indexing of BAM files
parallel -j $CPU samtools index {} ::: $(ls -1 *.sort.bam)
		if [ $? -ne 0 ]
			then 
				printf "There is a problem in the samtools-index step"
				exit 1
		fi

# create a list of BAM files with path

for i in $(ls -1 *.sort.bam)
			do
				printf "$PWD/${i}\n" >> "bamlist"
				if [ $? -ne 0 ]
					then 
					printf "There is a problem in the production of the bam file list"
					exit 1
				fi
			done
exec >/dev/tty

#######################################


OUT=variantcalling

mkdir results1
cd results1

exec &> samt_var.log

samtools mpileup -g -f $REF -b bamlist > variants.bcf

	if [ $? -ne 0 ]
                        then
                                printf "There is a problem at the samtools_mpileup step"
                                exit 1
                fi


bcftools call -mv variants.bcf > variants.vcf

	if [ $? -ne 0 ]
                        then
                                printf "There is a problem at the bcf2vcf step"
                                exit 1
                fi
		
exec >/dev/tty
